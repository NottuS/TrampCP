package gov.pr.celepar.ucs_manterinstituicao.pojo;

// Generated 23/06/2015 11:12:09 by Hibernate Tools 3.2.0.CR1
import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


/**
 * Instituicao generated by hbm2java
 */
@Entity
@Table(name = "tb_instituicao", schema = "public")
public class Instituicao implements Serializable {
	public enum Porte{
		Pequeno("Pequeno", 1), 
		Medio("Médio", 2), 
		Grande("Grande",3);
		
		private Integer codigo;
		private String descricao;
		
		Porte(String descricao, Integer codigo){
			this.descricao = descricao;
			this.codigo = codigo;
		}

		public Integer getCodigo() {
			return codigo;
		}

		public void setCodigo(Integer codigo) {
			this.codigo = codigo;
		}

		public String getDescricao() {
			return descricao;
		}

		public void setDescricao(String descricao) {
			this.descricao = descricao;
		}
	}
	
	private static final long serialVersionUID = -8373598738121148710L;
	private Integer codInstituicao;
    private NaturezaJuridica naturezaJuridica;
    private String cnpj;
    private String razaoSocial;
    private Integer porte;
    private Date dataCriacao;
    private Set<AreaInteresse> areaInteresses = new HashSet<AreaInteresse>(0);
    private Set<Telefone> instituicaoTelefones = new HashSet<Telefone>(0);
    private Set<Colaborador> colaboradores = new HashSet<Colaborador>(0);
    
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "instituicao", cascade = CascadeType.ALL)
    public Set<Colaborador> getColaboradores() {
		return colaboradores;
	}

	public void setColaboradores(Set<Colaborador> colaboradores) {
		this.colaboradores = colaboradores;
	}

	public Instituicao() {
    }

    public Instituicao(Integer codInstituicao,
        NaturezaJuridica naturezaJuridica, String cnpj, String razaoSocial,
        Integer porte, Date dataCriacao, Set<Colaborador> colaboradores) {
        this.codInstituicao = codInstituicao;
        this.naturezaJuridica = naturezaJuridica;
        this.cnpj = cnpj;
        this.razaoSocial = razaoSocial;
        this.porte = porte;
        this.dataCriacao = dataCriacao;
        this.colaboradores = colaboradores;
    }

    public Instituicao(Integer codInstituicao,
        NaturezaJuridica naturezaJuridica, String cnpj, String razaoSocial,
        Integer porte, Date dataCriacao, Set<AreaInteresse> areaInteresses,
        Set<Telefone> instituicaoTelefones) {
        this.codInstituicao = codInstituicao;
        this.naturezaJuridica = naturezaJuridica;
        this.cnpj = cnpj;
        this.razaoSocial = razaoSocial;
        this.porte = porte;
        this.dataCriacao = dataCriacao;
        this.areaInteresses = areaInteresses;
        this.instituicaoTelefones = instituicaoTelefones;
    }
    @Id
    @SequenceGenerator(name="INSTITUICAO_ID_SEQ", sequenceName="tb_instituicao_cod_instituicao_seq")
    @GeneratedValue(strategy=GenerationType.AUTO, generator="INSTITUICAO_ID_SEQ")
    @Column(name = "cod_instituicao", nullable = false)
    public Integer getCodInstituicao() {
        return this.codInstituicao;
    }

    public void setCodInstituicao(Integer codInstituicao) {
        this.codInstituicao = codInstituicao;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "cod_natureza_juridica", nullable = false)
    public NaturezaJuridica getNaturezaJuridica() {
        return this.naturezaJuridica;
    }

    public void setNaturezaJuridica(NaturezaJuridica naturezaJuridica) {
        this.naturezaJuridica = naturezaJuridica;
    }

    @Column(name = "cnpj", nullable = false, length = 14)
    public String getCnpj() {
        return this.cnpj;
    }

    public void setCnpj(String cnpj) {
        this.cnpj = cnpj;
    }

    @Column(name = "razao_social", nullable = false, length = 100)
    public String getRazaoSocial() {
        return this.razaoSocial;
    }

    public void setRazaoSocial(String razaoSocial) {
        this.razaoSocial = razaoSocial;
    }

    @Column(name = "porte", nullable = false)
    public Integer getPorte() {
        return this.porte;
    }

    public void setPorte(Integer porte) {
        this.porte = porte;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "data_criacao", nullable = false, length = 8)
    public Date getDataCriacao() {
        return this.dataCriacao;
    }

    public void setDataCriacao(Date dataCriacao) {
        this.dataCriacao = dataCriacao;
    }

    @ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(name = "tb_instituicao_area_interesse", joinColumns =  {
        @JoinColumn(name = "cod_instituicao", nullable = false, updatable = false)
    }
    , inverseJoinColumns =  {
        @JoinColumn(name = "cod_area_interesse", nullable = false, updatable = false)
    }
    )
    public Set<AreaInteresse> getAreaInteresses() {
        return this.areaInteresses;
    }

    public void setAreaInteresses(Set<AreaInteresse> areaInteresses) {
        this.areaInteresses = areaInteresses;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "instituicao", cascade = CascadeType.ALL)
    public Set<Telefone> getInstituicaoTelefones() {
        return this.instituicaoTelefones;
    }

    public void setInstituicaoTelefones(
        Set<Telefone> instituicaoTelefones) {
        this.instituicaoTelefones = instituicaoTelefones;
    }

    public boolean equals(Object other) {
        if ((this == other)) {
            return true;
        }

        if ((other == null)) {
            return false;
        }

        if (!(other instanceof Instituicao)) {
            return false;
        }

        Instituicao castOther = (Instituicao) other;

        return ((this.getCodInstituicao() == castOther.getCodInstituicao()) ||
        ((this.getCodInstituicao() != null) &&
        (castOther.getCodInstituicao() != null) &&
        this.getCodInstituicao().equals(castOther.getCodInstituicao())));
    }

    public int hashCode() {
        int result = 17;

        result = (37 * result) +
            ((getCodInstituicao() == null) ? 0
                                           : this.getCodInstituicao().hashCode());

        return result;
    }
}
